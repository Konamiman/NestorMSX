//AUTOGENERATED FILE - Do not modify directly
//Change the .tt file instead

namespace Konamiman.NestorMSX.Z80Debugger
{
    public partial class InstructionExtractor
    {
        private readonly Z80Instruction[] DDInstructionPrototypes =
        {
            new Z80Instruction //0xDD 0x09
            {
                FormatString = "add ix,bc",
				RawBytes = new byte[] { 0xDD, 0x09 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x19
            {
                FormatString = "add ix,de",
				RawBytes = new byte[] { 0xDD, 0x19 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x21
            {
                FormatString = "ld ix,{0}",
				RawBytes = new byte[] { 0xDD, 0x21, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateWord,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x22
            {
                FormatString = "ld ({0}),ix",
				RawBytes = new byte[] { 0xDD, 0x22, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x23
            {
                FormatString = "inc ix",
				RawBytes = new byte[] { 0xDD, 0x23 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x24
            {
                FormatString = "inc ixh",
				RawBytes = new byte[] { 0xDD, 0x24 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x25
            {
                FormatString = "dec ixh",
				RawBytes = new byte[] { 0xDD, 0x25 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x26
            {
                FormatString = "ld ixh,{0}",
				RawBytes = new byte[] { 0xDD, 0x26, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x29
            {
                FormatString = "add ix,ix",
				RawBytes = new byte[] { 0xDD, 0x29 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x2A
            {
                FormatString = "ld ix,({0})",
				RawBytes = new byte[] { 0xDD, 0x2A, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x2B
            {
                FormatString = "dec ix",
				RawBytes = new byte[] { 0xDD, 0x2B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x2C
            {
                FormatString = "inc ixl",
				RawBytes = new byte[] { 0xDD, 0x2C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x2D
            {
                FormatString = "dec ixl",
				RawBytes = new byte[] { 0xDD, 0x2D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x2E
            {
                FormatString = "ld ixl,{0}",
				RawBytes = new byte[] { 0xDD, 0x2E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x34
            {
                FormatString = "inc (ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x34, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x35
            {
                FormatString = "dec (ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x35, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x36
            {
                FormatString = "ld (ix+{0}),{1}",
				RawBytes = new byte[] { 0xDD, 0x36, 0x00, 0x00 },
				Operands = new[]
                {
				    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    },
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 3
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x39
            {
                FormatString = "add ix,sp",
				RawBytes = new byte[] { 0xDD, 0x39 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x44
            {
                FormatString = "ld b,ixh",
				RawBytes = new byte[] { 0xDD, 0x44 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x45
            {
                FormatString = "ld b,ixl",
				RawBytes = new byte[] { 0xDD, 0x45 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x46
            {
                FormatString = "ld b,(ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x46, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x4C
            {
                FormatString = "ld c,ixh",
				RawBytes = new byte[] { 0xDD, 0x4C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x4D
            {
                FormatString = "ld c,ixl",
				RawBytes = new byte[] { 0xDD, 0x4D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x4E
            {
                FormatString = "ld c,(ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x4E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x54
            {
                FormatString = "ld d,ixh",
				RawBytes = new byte[] { 0xDD, 0x54 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x55
            {
                FormatString = "ld d,ixl",
				RawBytes = new byte[] { 0xDD, 0x55 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x56
            {
                FormatString = "ld d,(ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x56, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x5C
            {
                FormatString = "ld e,ixh",
				RawBytes = new byte[] { 0xDD, 0x5C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x5D
            {
                FormatString = "ld e,ixl",
				RawBytes = new byte[] { 0xDD, 0x5D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x5E
            {
                FormatString = "ld e,(ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x5E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x60
            {
                FormatString = "ld ixh,b",
				RawBytes = new byte[] { 0xDD, 0x60 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x61
            {
                FormatString = "ld ixh,c",
				RawBytes = new byte[] { 0xDD, 0x61 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x62
            {
                FormatString = "ld ixh,d",
				RawBytes = new byte[] { 0xDD, 0x62 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x63
            {
                FormatString = "ld ixh,e",
				RawBytes = new byte[] { 0xDD, 0x63 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x64
            {
                FormatString = "ld ixh,ixh",
				RawBytes = new byte[] { 0xDD, 0x64 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x65
            {
                FormatString = "ld ixh,ixl",
				RawBytes = new byte[] { 0xDD, 0x65 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x66
            {
                FormatString = "ld h,(ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x66, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x67
            {
                FormatString = "ld ixh,a",
				RawBytes = new byte[] { 0xDD, 0x67 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x68
            {
                FormatString = "ld ixl,b",
				RawBytes = new byte[] { 0xDD, 0x68 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x69
            {
                FormatString = "ld ixl,c",
				RawBytes = new byte[] { 0xDD, 0x69 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x6A
            {
                FormatString = "ld ixl,d",
				RawBytes = new byte[] { 0xDD, 0x6A },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x6B
            {
                FormatString = "ld ixl,e",
				RawBytes = new byte[] { 0xDD, 0x6B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x6C
            {
                FormatString = "ld ixl,ixh",
				RawBytes = new byte[] { 0xDD, 0x6C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x6D
            {
                FormatString = "ld ixl,ixl",
				RawBytes = new byte[] { 0xDD, 0x6D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x6E
            {
                FormatString = "ld l,(ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x6E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x6F
            {
                FormatString = "ld ixl,a",
				RawBytes = new byte[] { 0xDD, 0x6F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x70
            {
                FormatString = "ld (ix+{0}),b",
				RawBytes = new byte[] { 0xDD, 0x70, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x71
            {
                FormatString = "ld (ix+{0}),c",
				RawBytes = new byte[] { 0xDD, 0x71, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x72
            {
                FormatString = "ld (ix+{0}),d",
				RawBytes = new byte[] { 0xDD, 0x72, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x73
            {
                FormatString = "ld (ix+{0}),e",
				RawBytes = new byte[] { 0xDD, 0x73, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x74
            {
                FormatString = "ld (ix+{0}),h",
				RawBytes = new byte[] { 0xDD, 0x74, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x75
            {
                FormatString = "ld (ix+{0}),l",
				RawBytes = new byte[] { 0xDD, 0x75, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x77
            {
                FormatString = "ld (ix+{0}),a",
				RawBytes = new byte[] { 0xDD, 0x77, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x7C
            {
                FormatString = "ld a,ixh",
				RawBytes = new byte[] { 0xDD, 0x7C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x7D
            {
                FormatString = "ld a,ixl",
				RawBytes = new byte[] { 0xDD, 0x7D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x7E
            {
                FormatString = "ld a,(ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x7E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x84
            {
                FormatString = "add a,ixh",
				RawBytes = new byte[] { 0xDD, 0x84 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x85
            {
                FormatString = "add a,ixl",
				RawBytes = new byte[] { 0xDD, 0x85 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x86
            {
                FormatString = "add a,(ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x86, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x8C
            {
                FormatString = "adc a,ixh",
				RawBytes = new byte[] { 0xDD, 0x8C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x8D
            {
                FormatString = "adc a,ixl",
				RawBytes = new byte[] { 0xDD, 0x8D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x8E
            {
                FormatString = "adc a,(ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x8E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x94
            {
                FormatString = "sub ixh",
				RawBytes = new byte[] { 0xDD, 0x94 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x95
            {
                FormatString = "sub ixl",
				RawBytes = new byte[] { 0xDD, 0x95 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x96
            {
                FormatString = "sub (ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x96, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x9C
            {
                FormatString = "sbc a,ixh",
				RawBytes = new byte[] { 0xDD, 0x9C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x9D
            {
                FormatString = "sbc a,ixl",
				RawBytes = new byte[] { 0xDD, 0x9D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0x9E
            {
                FormatString = "sbc a,(ix+{0})",
				RawBytes = new byte[] { 0xDD, 0x9E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xA4
            {
                FormatString = "and ixh",
				RawBytes = new byte[] { 0xDD, 0xA4 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xA5
            {
                FormatString = "and ixl",
				RawBytes = new byte[] { 0xDD, 0xA5 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xA6
            {
                FormatString = "and (ix+{0})",
				RawBytes = new byte[] { 0xDD, 0xA6, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xAC
            {
                FormatString = "xor ixh",
				RawBytes = new byte[] { 0xDD, 0xAC },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xAD
            {
                FormatString = "xor ixl",
				RawBytes = new byte[] { 0xDD, 0xAD },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xAE
            {
                FormatString = "xor (ix+{0})",
				RawBytes = new byte[] { 0xDD, 0xAE, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xB4
            {
                FormatString = "or ixh",
				RawBytes = new byte[] { 0xDD, 0xB4 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xB5
            {
                FormatString = "or ixl",
				RawBytes = new byte[] { 0xDD, 0xB5 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xB6
            {
                FormatString = "or (ix+{0})",
				RawBytes = new byte[] { 0xDD, 0xB6, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xBC
            {
                FormatString = "cp ixh",
				RawBytes = new byte[] { 0xDD, 0xBC },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xBD
            {
                FormatString = "cp ixl",
				RawBytes = new byte[] { 0xDD, 0xBD },
				Operands = new Operand[0],
				InstructionType = InstructionType.Undocumented,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xBE
            {
                FormatString = "cp (ix+{0})",
				RawBytes = new byte[] { 0xDD, 0xBE, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.IndexRegisterOffset,
                        OffsetWithinInstruction = 2
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xE1
            {
                FormatString = "pop ix",
				RawBytes = new byte[] { 0xDD, 0xE1 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xE3
            {
                FormatString = "ex (sp),ix",
				RawBytes = new byte[] { 0xDD, 0xE3 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xE5
            {
                FormatString = "push ix",
				RawBytes = new byte[] { 0xDD, 0xE5 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xE9
            {
                FormatString = "jp (ix)",
				RawBytes = new byte[] { 0xDD, 0xE9 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDD 0xF9
            {
                FormatString = "ld sp,ix",
				RawBytes = new byte[] { 0xDD, 0xF9 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
		};
    }
}