<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{A844DC19-ADD4-49F6-9512-8E1F94D1AE34}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Konamiman.NestorMSX.Z80Debugger</RootNamespace>
    <AssemblyName>NestorMSX.Debugger</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Evaluant.Antlr, Version=0.3.0.37313, Culture=neutral, PublicKeyToken=973cde3f1cafed03, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>Console\ExpressionEvaluator\Evaluant.Antlr.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="Z80dotNet, Version=1.0.5.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\Z80dotNet.1.0.5.0\lib\net40-Client\Z80dotNet.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Console\CommandExecutionRequestedEventArgs.cs" />
    <Compile Include="Console\CommandInterpreter\AliasAttribute.cs" />
    <Compile Include="Console\CommandInterpreter\CommandArgument.cs" />
    <Compile Include="Console\CommandInterpreter\CommandExecutionException.cs" />
    <Compile Include="Console\CommandInterpreter\CommandParameter.cs" />
    <Compile Include="Console\CommandInterpreter\CommandInterpreter.cs" />
    <Compile Include="Console\CommandInterpreter\ConstantValueVariable.cs" />
    <Compile Include="Console\CommandInterpreter\RawExpressionAttribute.cs" />
    <Compile Include="Console\CommandProviders\DosErrors.cs" />
    <Compile Include="Console\CommandProviders\DosFunctions.cs" />
    <Compile Include="Console\CommandProviders\EmulatorCommands.Cpu.cs">
      <DependentUpon>EmulatorCommandsProvider.cs</DependentUpon>
    </Compile>
    <Compile Include="Console\CommandProviders\EmulatorCommands.Dos.cs">
      <DependentUpon>EmulatorCommandsProvider.cs</DependentUpon>
    </Compile>
    <Compile Include="Console\CommandProviders\EmulatorCommands.Memory.cs">
      <DependentUpon>EmulatorCommandsProvider.cs</DependentUpon>
    </Compile>
    <Compile Include="Console\CommandProviders\EmulatorCommands.Trace.cs">
      <DependentUpon>EmulatorCommandsProvider.cs</DependentUpon>
    </Compile>
    <Compile Include="Console\CommandProviders\EmulatorCommandsProvider.cs" />
    <Compile Include="Console\CommandProviders\UtilsCommandsProvider.cs" />
    <Compile Include="Console\ConsoleTestForm.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="Console\ConsoleTestForm.Designer.cs">
      <DependentUpon>ConsoleTestForm.cs</DependentUpon>
    </Compile>
    <Compile Include="Console\ConsoleWindow.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="Console\ConsoleWindow.Designer.cs">
      <DependentUpon>ConsoleWindow.cs</DependentUpon>
    </Compile>
    <Compile Include="Console\ExpressionEvaluator\EvaluantExpressionEvaluatorWrapper.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\Domain\BinaryExpression.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\Domain\EvaluationVisitor.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\Domain\Function.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\Domain\LogicalExpression.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\Domain\LogicalExpressionVisitor.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\Domain\Parameter.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\Domain\UnaryExpression.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\Domain\Value.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\ECalcLexer.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\ECalcParser.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\EvaluateFunctionHandler.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\EvaluateParameterHandler.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\EvaluationException.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\Expression.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\FunctionArgs.cs" />
    <Compile Include="Console\ExpressionEvaluator\Evaluant\ParameterArgs.cs" />
    <Compile Include="Console\ExpressionEvaluator\EvaluateFunctionEventArgs.cs" />
    <Compile Include="Console\ExpressionEvaluator\EvaluateNameEventArgs.cs" />
    <Compile Include="Console\ExpressionEvaluator\IExpressionEvaluator.cs" />
    <Compile Include="Console\CommandInterpreter\Command.cs" />
    <Compile Include="Console\CommandInterpreter\NameAttribute.cs" />
    <Compile Include="Console\CommandInterpreter\IgnoreAttribute.cs" />
    <Compile Include="Console\CommandInterpreter\MethodCommand.cs" />
    <Compile Include="Console\CommandInterpreter\PropertyVariable.cs" />
    <Compile Include="Console\CommandInterpreter\TokenWithName.cs" />
    <Compile Include="Console\CommandInterpreter\TypeConverterWrapper.cs" />
    <Compile Include="Console\CommandInterpreter\Variable.cs" />
    <Compile Include="Console\IAsyncMessagePrinter.cs" />
    <Compile Include="Console\IConsoleWindow.cs" />
    <Compile Include="Console\Prompt.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Include="Console\Prompt.designer.cs">
      <DependentUpon>Prompt.cs</DependentUpon>
    </Compile>
    <Compile Include="ExtensionMethods.cs" />
    <Compile Include="InstructionExtraction\InstructionExtractor.cs" />
    <Compile Include="InstructionExtraction\InstructionExtractor.DBinstructions.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>InstructionExtractor.DBinstructions.tt</DependentUpon>
    </Compile>
    <Compile Include="InstructionExtraction\InstructionExtractor.DDandFDinstructions.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>InstructionExtractor.DDandFDinstructions.tt</DependentUpon>
    </Compile>
    <Compile Include="InstructionExtraction\InstructionExtractor.DDCBandFDCBinstructions.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>InstructionExtractor.DDCBandFDCBinstructions.tt</DependentUpon>
    </Compile>
    <Compile Include="InstructionExtraction\InstructionExtractor.EDinstructions.cs">
      <DependentUpon>InstructionExtractor.EDinstructions.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Include="InstructionExtraction\InstructionExtractor.SingleByteInstructions.cs">
      <DependentUpon>InstructionExtractor.SingleByteInstructions.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Include="InstructionExtraction\InstructionExtractor.SingleByte_temp.cs">
      <DependentUpon>InstructionExtractor.cs</DependentUpon>
    </Compile>
    <Compile Include="InstructionExtraction\InstructionType.cs" />
    <Compile Include="InstructionExtraction\Z80Instruction.cs" />
    <Compile Include="InstructionExtraction\Operand.cs" />
    <Compile Include="InstructionExtraction\OperandType.cs" />
    <Compile Include="InstructionExtraction\IInstructionExtractor.cs" />
    <Compile Include="Plugin\DebuggerPlugin.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\NestorMSX.Infrastructure\NestorMSX.Infrastructure.csproj">
      <Project>{41786ee5-ecd9-4b70-b0d9-ed4878ae9fc5}</Project>
      <Name>NestorMSX.Infrastructure</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="Console\ExpressionEvaluator\Evaluant\Function.cd" />
    <None Include="Console\ExpressionEvaluator\Evaluant\LogicalExpression.cd" />
    <None Include="InstructionExtraction\LinqPad\GetCBInstructions.linq" />
    <None Include="InstructionExtraction\LinqPad\GetDDInstructions.linq" />
    <None Include="InstructionExtraction\LinqPad\GetEDInstructions.linq" />
    <None Include="InstructionExtraction\LinqPad\GetSingleByteInstructions.linq" />
    <None Include="InstructionExtraction\LinqPad\PurgeInstructionTemplatesSource.linq" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Console\ExpressionEvaluator\Evaluant.Antlr.dll" />
    <Content Include="InstructionExtraction\InstructionExtractor.DBinstructions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <DependentUpon>InstructionExtractor.cs</DependentUpon>
      <LastGenOutput>InstructionExtractor.DBinstructions.cs</LastGenOutput>
    </Content>
    <Content Include="InstructionExtraction\InstructionExtractor.DDandFDinstructions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <DependentUpon>InstructionExtractor.cs</DependentUpon>
      <LastGenOutput>InstructionExtractor.DDandFDinstructions.cs</LastGenOutput>
    </Content>
    <Content Include="InstructionExtraction\InstructionExtractor.DDCBandFDCBinstructions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <DependentUpon>InstructionExtractor.cs</DependentUpon>
      <LastGenOutput>InstructionExtractor.DDCBandFDCBinstructions.cs</LastGenOutput>
    </Content>
    <Content Include="InstructionExtraction\InstructionExtractor.EDinstructions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>InstructionExtractor.EDinstructions.cs</LastGenOutput>
      <DependentUpon>InstructionExtractor.cs</DependentUpon>
    </Content>
    <Content Include="InstructionExtraction\InstructionExtractor.SingleByteInstructions.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>InstructionExtractor.SingleByteInstructions.cs</LastGenOutput>
      <DependentUpon>InstructionExtractor.cs</DependentUpon>
    </Content>
    <Content Include="InstructionExtraction\InstructionTemplatesSource.txt" />
    <Content Include="InstructionExtraction\InstructionTemplatesSourceOriginal.txt" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Console\ConsoleTestForm.resx">
      <DependentUpon>ConsoleTestForm.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Console\ConsoleWindow.resx">
      <DependentUpon>ConsoleWindow.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="Console\Prompt.resx">
      <DependentUpon>Prompt.cs</DependentUpon>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>