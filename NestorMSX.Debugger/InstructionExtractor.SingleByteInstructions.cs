//AUTOGENERATED FILE - Do not modify directly
//Change the .tt file instead

namespace Konamiman.NestorMSX.Z80Debugger
{
    public partial class InstructionExtractor
    {
        private readonly Z80Instruction[] singleByteInstructionPrototypes =
        {
            new Z80Instruction //0x00
            {
                FormatString = "nop",
				RawBytes = new byte[] { 0x00 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x01
            {
                FormatString = "ld bc,{0}",
				RawBytes = new byte[] { 0x01, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateWord,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x02
            {
                FormatString = "ld (bc),a",
				RawBytes = new byte[] { 0x02 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x03
            {
                FormatString = "inc bc",
				RawBytes = new byte[] { 0x03 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x04
            {
                FormatString = "inc b",
				RawBytes = new byte[] { 0x04 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x05
            {
                FormatString = "dec b",
				RawBytes = new byte[] { 0x05 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x06
            {
                FormatString = "ld b,{0}",
				RawBytes = new byte[] { 0x06, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x07
            {
                FormatString = "rlca",
				RawBytes = new byte[] { 0x07 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x08
            {
                FormatString = "ex af,af'",
				RawBytes = new byte[] { 0x08 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x09
            {
                FormatString = "add hl,bc",
				RawBytes = new byte[] { 0x09 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x0A
            {
                FormatString = "ld a,(bc)",
				RawBytes = new byte[] { 0x0A },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x0B
            {
                FormatString = "dec bc",
				RawBytes = new byte[] { 0x0B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x0C
            {
                FormatString = "inc c",
				RawBytes = new byte[] { 0x0C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x0D
            {
                FormatString = "dec c",
				RawBytes = new byte[] { 0x0D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x0E
            {
                FormatString = "ld c,{0}",
				RawBytes = new byte[] { 0x0E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x0F
            {
                FormatString = "rrca",
				RawBytes = new byte[] { 0x0F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x10
            {
                FormatString = "djnz {0}",
				RawBytes = new byte[] { 0x10, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.RelativeJumpAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x11
            {
                FormatString = "ld de,{0}",
				RawBytes = new byte[] { 0x11, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateWord,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x12
            {
                FormatString = "ld (de),a",
				RawBytes = new byte[] { 0x12 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x13
            {
                FormatString = "inc de",
				RawBytes = new byte[] { 0x13 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x14
            {
                FormatString = "inc d",
				RawBytes = new byte[] { 0x14 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x15
            {
                FormatString = "dec d",
				RawBytes = new byte[] { 0x15 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x16
            {
                FormatString = "ld d,{0}",
				RawBytes = new byte[] { 0x16, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x17
            {
                FormatString = "rla",
				RawBytes = new byte[] { 0x17 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x18
            {
                FormatString = "jr {0}",
				RawBytes = new byte[] { 0x18, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.RelativeJumpAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x19
            {
                FormatString = "add hl,de",
				RawBytes = new byte[] { 0x19 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x1A
            {
                FormatString = "ld a,(de)",
				RawBytes = new byte[] { 0x1A },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x1B
            {
                FormatString = "dec de",
				RawBytes = new byte[] { 0x1B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x1C
            {
                FormatString = "inc e",
				RawBytes = new byte[] { 0x1C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x1D
            {
                FormatString = "dec e",
				RawBytes = new byte[] { 0x1D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x1E
            {
                FormatString = "ld e,{0}",
				RawBytes = new byte[] { 0x1E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x1F
            {
                FormatString = "rra",
				RawBytes = new byte[] { 0x1F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x20
            {
                FormatString = "jr nz,{0}",
				RawBytes = new byte[] { 0x20, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.RelativeJumpAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x21
            {
                FormatString = "ld hl,{0}",
				RawBytes = new byte[] { 0x21, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateWord,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x22
            {
                FormatString = "ld ({0}),hl",
				RawBytes = new byte[] { 0x22, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x23
            {
                FormatString = "inc hl",
				RawBytes = new byte[] { 0x23 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x24
            {
                FormatString = "inc h",
				RawBytes = new byte[] { 0x24 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x25
            {
                FormatString = "dec h",
				RawBytes = new byte[] { 0x25 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x26
            {
                FormatString = "ld h,{0}",
				RawBytes = new byte[] { 0x26, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x27
            {
                FormatString = "daa",
				RawBytes = new byte[] { 0x27 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x28
            {
                FormatString = "jr z,{0}",
				RawBytes = new byte[] { 0x28, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.RelativeJumpAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x29
            {
                FormatString = "sla hl",
				RawBytes = new byte[] { 0x29 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x2A
            {
                FormatString = "ld hl,({0})",
				RawBytes = new byte[] { 0x2A, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x2B
            {
                FormatString = "dec hl",
				RawBytes = new byte[] { 0x2B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x2C
            {
                FormatString = "inc l",
				RawBytes = new byte[] { 0x2C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x2D
            {
                FormatString = "dec l",
				RawBytes = new byte[] { 0x2D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x2E
            {
                FormatString = "ld l,{0}",
				RawBytes = new byte[] { 0x2E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x2F
            {
                FormatString = "cpl",
				RawBytes = new byte[] { 0x2F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x30
            {
                FormatString = "jr nc,{0}",
				RawBytes = new byte[] { 0x30, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.RelativeJumpAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x31
            {
                FormatString = "ld sp,{0}",
				RawBytes = new byte[] { 0x31, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateWord,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x32
            {
                FormatString = "ld ({0}),a",
				RawBytes = new byte[] { 0x32, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x33
            {
                FormatString = "inc sp",
				RawBytes = new byte[] { 0x33 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x34
            {
                FormatString = "inc (hl)",
				RawBytes = new byte[] { 0x34 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x35
            {
                FormatString = "dec (hl)",
				RawBytes = new byte[] { 0x35 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x36
            {
                FormatString = "ld (hl),{0}",
				RawBytes = new byte[] { 0x36, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x37
            {
                FormatString = "scf",
				RawBytes = new byte[] { 0x37 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x38
            {
                FormatString = "jr c,{0}",
				RawBytes = new byte[] { 0x38, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.RelativeJumpAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x39
            {
                FormatString = "add hl,sp",
				RawBytes = new byte[] { 0x39 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x3A
            {
                FormatString = "ld a,({0})",
				RawBytes = new byte[] { 0x3A, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x3B
            {
                FormatString = "dec sp",
				RawBytes = new byte[] { 0x3B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x3C
            {
                FormatString = "inc a",
				RawBytes = new byte[] { 0x3C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x3D
            {
                FormatString = "dec a",
				RawBytes = new byte[] { 0x3D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x3E
            {
                FormatString = "ld a,{0}",
				RawBytes = new byte[] { 0x3E, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x3F
            {
                FormatString = "ccf",
				RawBytes = new byte[] { 0x3F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x40
            {
                FormatString = "ld b,b",
				RawBytes = new byte[] { 0x40 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x41
            {
                FormatString = "ld b,c",
				RawBytes = new byte[] { 0x41 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x42
            {
                FormatString = "ld b,d",
				RawBytes = new byte[] { 0x42 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x43
            {
                FormatString = "ld b,e",
				RawBytes = new byte[] { 0x43 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x44
            {
                FormatString = "ld b,h",
				RawBytes = new byte[] { 0x44 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x45
            {
                FormatString = "ld b,l",
				RawBytes = new byte[] { 0x45 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x46
            {
                FormatString = "ld b,(hl)",
				RawBytes = new byte[] { 0x46 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x47
            {
                FormatString = "ld b,a",
				RawBytes = new byte[] { 0x47 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x48
            {
                FormatString = "ld c,b",
				RawBytes = new byte[] { 0x48 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x49
            {
                FormatString = "ld c,c",
				RawBytes = new byte[] { 0x49 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x4A
            {
                FormatString = "ld c,d",
				RawBytes = new byte[] { 0x4A },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x4B
            {
                FormatString = "ld c,e",
				RawBytes = new byte[] { 0x4B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x4C
            {
                FormatString = "ld c,h",
				RawBytes = new byte[] { 0x4C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x4D
            {
                FormatString = "ld c,l",
				RawBytes = new byte[] { 0x4D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x4E
            {
                FormatString = "ld c,(hl)",
				RawBytes = new byte[] { 0x4E },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x4F
            {
                FormatString = "ld c,a",
				RawBytes = new byte[] { 0x4F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x50
            {
                FormatString = "ld d,b",
				RawBytes = new byte[] { 0x50 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x51
            {
                FormatString = "ld d,c",
				RawBytes = new byte[] { 0x51 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x52
            {
                FormatString = "ld d,d",
				RawBytes = new byte[] { 0x52 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x53
            {
                FormatString = "ld d,e",
				RawBytes = new byte[] { 0x53 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x54
            {
                FormatString = "ld d,h",
				RawBytes = new byte[] { 0x54 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x55
            {
                FormatString = "ld d,l",
				RawBytes = new byte[] { 0x55 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x56
            {
                FormatString = "ld d,(hl)",
				RawBytes = new byte[] { 0x56 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x57
            {
                FormatString = "ld d,a",
				RawBytes = new byte[] { 0x57 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x58
            {
                FormatString = "ld e,b",
				RawBytes = new byte[] { 0x58 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x59
            {
                FormatString = "ld e,c",
				RawBytes = new byte[] { 0x59 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x5A
            {
                FormatString = "ld e,d",
				RawBytes = new byte[] { 0x5A },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x5B
            {
                FormatString = "ld e,e",
				RawBytes = new byte[] { 0x5B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x5C
            {
                FormatString = "ld e,h",
				RawBytes = new byte[] { 0x5C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x5D
            {
                FormatString = "ld e,l",
				RawBytes = new byte[] { 0x5D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x5E
            {
                FormatString = "ld e,(hl)",
				RawBytes = new byte[] { 0x5E },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x5F
            {
                FormatString = "ld e,a",
				RawBytes = new byte[] { 0x5F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x60
            {
                FormatString = "ld h,b",
				RawBytes = new byte[] { 0x60 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x61
            {
                FormatString = "ld h,c",
				RawBytes = new byte[] { 0x61 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x62
            {
                FormatString = "ld h,d",
				RawBytes = new byte[] { 0x62 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x63
            {
                FormatString = "ld h,e",
				RawBytes = new byte[] { 0x63 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x64
            {
                FormatString = "ld h,h",
				RawBytes = new byte[] { 0x64 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x65
            {
                FormatString = "ld h,l",
				RawBytes = new byte[] { 0x65 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x66
            {
                FormatString = "ld h,(hl)",
				RawBytes = new byte[] { 0x66 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x67
            {
                FormatString = "ld h,a",
				RawBytes = new byte[] { 0x67 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x68
            {
                FormatString = "ld l,b",
				RawBytes = new byte[] { 0x68 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x69
            {
                FormatString = "ld l,c",
				RawBytes = new byte[] { 0x69 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x6A
            {
                FormatString = "ld l,d",
				RawBytes = new byte[] { 0x6A },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x6B
            {
                FormatString = "ld l,e",
				RawBytes = new byte[] { 0x6B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x6C
            {
                FormatString = "ld l,h",
				RawBytes = new byte[] { 0x6C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x6D
            {
                FormatString = "ld l,l",
				RawBytes = new byte[] { 0x6D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x6E
            {
                FormatString = "ld l,(hl)",
				RawBytes = new byte[] { 0x6E },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x6F
            {
                FormatString = "ld l,a",
				RawBytes = new byte[] { 0x6F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x70
            {
                FormatString = "ld (hl),b",
				RawBytes = new byte[] { 0x70 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x71
            {
                FormatString = "ld (hl),c",
				RawBytes = new byte[] { 0x71 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x72
            {
                FormatString = "ld (hl),d",
				RawBytes = new byte[] { 0x72 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x73
            {
                FormatString = "ld (hl),e",
				RawBytes = new byte[] { 0x73 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x74
            {
                FormatString = "ld (hl),h",
				RawBytes = new byte[] { 0x74 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x75
            {
                FormatString = "ld (hl),l",
				RawBytes = new byte[] { 0x75 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x76
            {
                FormatString = "halt",
				RawBytes = new byte[] { 0x76 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x77
            {
                FormatString = "ld (hl),a",
				RawBytes = new byte[] { 0x77 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = true,
                WritesToPort = false
            },
            new Z80Instruction //0x78
            {
                FormatString = "ld a,b",
				RawBytes = new byte[] { 0x78 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x79
            {
                FormatString = "ld a,c",
				RawBytes = new byte[] { 0x79 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x7A
            {
                FormatString = "ld a,d",
				RawBytes = new byte[] { 0x7A },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x7B
            {
                FormatString = "ld a,e",
				RawBytes = new byte[] { 0x7B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x7C
            {
                FormatString = "ld a,h",
				RawBytes = new byte[] { 0x7C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x7D
            {
                FormatString = "ld a,l",
				RawBytes = new byte[] { 0x7D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x7E
            {
                FormatString = "ld a,(hl)",
				RawBytes = new byte[] { 0x7E },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x7F
            {
                FormatString = "ld a,a",
				RawBytes = new byte[] { 0x7F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x80
            {
                FormatString = "add a,b",
				RawBytes = new byte[] { 0x80 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x81
            {
                FormatString = "add a,c",
				RawBytes = new byte[] { 0x81 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x82
            {
                FormatString = "add a,d",
				RawBytes = new byte[] { 0x82 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x83
            {
                FormatString = "add a,e",
				RawBytes = new byte[] { 0x83 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x84
            {
                FormatString = "add a,h",
				RawBytes = new byte[] { 0x84 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x85
            {
                FormatString = "add a,l",
				RawBytes = new byte[] { 0x85 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x86
            {
                FormatString = "add a,(hl)",
				RawBytes = new byte[] { 0x86 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x87
            {
                FormatString = "add a,a",
				RawBytes = new byte[] { 0x87 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x88
            {
                FormatString = "adc a,b",
				RawBytes = new byte[] { 0x88 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x89
            {
                FormatString = "adc a,c",
				RawBytes = new byte[] { 0x89 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x8A
            {
                FormatString = "adc a,d",
				RawBytes = new byte[] { 0x8A },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x8B
            {
                FormatString = "adc a,e",
				RawBytes = new byte[] { 0x8B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x8C
            {
                FormatString = "adc a,h",
				RawBytes = new byte[] { 0x8C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x8D
            {
                FormatString = "adc a,l",
				RawBytes = new byte[] { 0x8D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x8E
            {
                FormatString = "adc a,(hl)",
				RawBytes = new byte[] { 0x8E },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x8F
            {
                FormatString = "adc a,a",
				RawBytes = new byte[] { 0x8F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x90
            {
                FormatString = "sub b",
				RawBytes = new byte[] { 0x90 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x91
            {
                FormatString = "sub c",
				RawBytes = new byte[] { 0x91 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x92
            {
                FormatString = "sub d",
				RawBytes = new byte[] { 0x92 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x93
            {
                FormatString = "sub e",
				RawBytes = new byte[] { 0x93 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x94
            {
                FormatString = "sub h",
				RawBytes = new byte[] { 0x94 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x95
            {
                FormatString = "sub l",
				RawBytes = new byte[] { 0x95 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x96
            {
                FormatString = "sub (hl)",
				RawBytes = new byte[] { 0x96 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x97
            {
                FormatString = "sub a",
				RawBytes = new byte[] { 0x97 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x98
            {
                FormatString = "sbc a,b",
				RawBytes = new byte[] { 0x98 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x99
            {
                FormatString = "sbc a,c",
				RawBytes = new byte[] { 0x99 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x9A
            {
                FormatString = "sbc a,d",
				RawBytes = new byte[] { 0x9A },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x9B
            {
                FormatString = "sbc a,e",
				RawBytes = new byte[] { 0x9B },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x9C
            {
                FormatString = "sbc a,h",
				RawBytes = new byte[] { 0x9C },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x9D
            {
                FormatString = "sbc a,l",
				RawBytes = new byte[] { 0x9D },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x9E
            {
                FormatString = "sbc a,(hl)",
				RawBytes = new byte[] { 0x9E },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0x9F
            {
                FormatString = "sbc a,a",
				RawBytes = new byte[] { 0x9F },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xA0
            {
                FormatString = "and b",
				RawBytes = new byte[] { 0xA0 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xA1
            {
                FormatString = "and c",
				RawBytes = new byte[] { 0xA1 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xA2
            {
                FormatString = "and d",
				RawBytes = new byte[] { 0xA2 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xA3
            {
                FormatString = "and e",
				RawBytes = new byte[] { 0xA3 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xA4
            {
                FormatString = "and h",
				RawBytes = new byte[] { 0xA4 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xA5
            {
                FormatString = "and l",
				RawBytes = new byte[] { 0xA5 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xA6
            {
                FormatString = "and (hl)",
				RawBytes = new byte[] { 0xA6 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xA7
            {
                FormatString = "and a",
				RawBytes = new byte[] { 0xA7 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xA8
            {
                FormatString = "xor b",
				RawBytes = new byte[] { 0xA8 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xA9
            {
                FormatString = "xor c",
				RawBytes = new byte[] { 0xA9 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xAA
            {
                FormatString = "xor d",
				RawBytes = new byte[] { 0xAA },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xAB
            {
                FormatString = "xor e",
				RawBytes = new byte[] { 0xAB },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xAC
            {
                FormatString = "xor h",
				RawBytes = new byte[] { 0xAC },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xAD
            {
                FormatString = "xor l",
				RawBytes = new byte[] { 0xAD },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xAE
            {
                FormatString = "xor (hl)",
				RawBytes = new byte[] { 0xAE },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xAF
            {
                FormatString = "xor a",
				RawBytes = new byte[] { 0xAF },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xB0
            {
                FormatString = "or b",
				RawBytes = new byte[] { 0xB0 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xB1
            {
                FormatString = "or c",
				RawBytes = new byte[] { 0xB1 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xB2
            {
                FormatString = "or d",
				RawBytes = new byte[] { 0xB2 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xB3
            {
                FormatString = "or e",
				RawBytes = new byte[] { 0xB3 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xB4
            {
                FormatString = "or h",
				RawBytes = new byte[] { 0xB4 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xB5
            {
                FormatString = "or l",
				RawBytes = new byte[] { 0xB5 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xB6
            {
                FormatString = "or (hl)",
				RawBytes = new byte[] { 0xB6 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xB7
            {
                FormatString = "or a",
				RawBytes = new byte[] { 0xB7 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xB8
            {
                FormatString = "cp b",
				RawBytes = new byte[] { 0xB8 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xB9
            {
                FormatString = "cp c",
				RawBytes = new byte[] { 0xB9 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xBA
            {
                FormatString = "cp d",
				RawBytes = new byte[] { 0xBA },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xBB
            {
                FormatString = "cp e",
				RawBytes = new byte[] { 0xBB },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xBC
            {
                FormatString = "cp h",
				RawBytes = new byte[] { 0xBC },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xBD
            {
                FormatString = "cp l",
				RawBytes = new byte[] { 0xBD },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xBE
            {
                FormatString = "cp (hl)",
				RawBytes = new byte[] { 0xBE },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xBF
            {
                FormatString = "cp a",
				RawBytes = new byte[] { 0xBF },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xC0
            {
                FormatString = "ret nz",
				RawBytes = new byte[] { 0xC0 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xC1
            {
                FormatString = "pop bc",
				RawBytes = new byte[] { 0xC1 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xC2
            {
                FormatString = "jp nz,{0}",
				RawBytes = new byte[] { 0xC2, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xC3
            {
                FormatString = "jp {0}",
				RawBytes = new byte[] { 0xC3, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xC4
            {
                FormatString = "call nz,{0}",
				RawBytes = new byte[] { 0xC4, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xC5
            {
                FormatString = "push bc",
				RawBytes = new byte[] { 0xC5 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xC6
            {
                FormatString = "add a,{0}",
				RawBytes = new byte[] { 0xC6, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xC7
            {
                FormatString = "rst 0",
				RawBytes = new byte[] { 0xC7 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xC8
            {
                FormatString = "ret z",
				RawBytes = new byte[] { 0xC8 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xC9
            {
                FormatString = "ret",
				RawBytes = new byte[] { 0xC9 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xCA
            {
                FormatString = "jp z,{0}",
				RawBytes = new byte[] { 0xCA, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
			null, //0xCB
            new Z80Instruction //0xCC
            {
                FormatString = "call z,{0}",
				RawBytes = new byte[] { 0xCC, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xCD
            {
                FormatString = "call {0}",
				RawBytes = new byte[] { 0xCD, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xCE
            {
                FormatString = "adc a,{0}",
				RawBytes = new byte[] { 0xCE, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xCF
            {
                FormatString = "rst 8",
				RawBytes = new byte[] { 0xCF },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xD0
            {
                FormatString = "ret nc",
				RawBytes = new byte[] { 0xD0 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xD1
            {
                FormatString = "pop de",
				RawBytes = new byte[] { 0xD1 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xD2
            {
                FormatString = "jp nc,{0}",
				RawBytes = new byte[] { 0xD2, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xD3
            {
                FormatString = "out ({0}),a",
				RawBytes = new byte[] { 0xD3, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = true
            },
            new Z80Instruction //0xD4
            {
                FormatString = "call nc,{0}",
				RawBytes = new byte[] { 0xD4, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xD5
            {
                FormatString = "push de",
				RawBytes = new byte[] { 0xD5 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xD6
            {
                FormatString = "sub {0}",
				RawBytes = new byte[] { 0xD6, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xD7
            {
                FormatString = "rst 16",
				RawBytes = new byte[] { 0xD7 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xD8
            {
                FormatString = "ret c",
				RawBytes = new byte[] { 0xD8 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xD9
            {
                FormatString = "exx",
				RawBytes = new byte[] { 0xD9 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDA
            {
                FormatString = "jp c,{0}",
				RawBytes = new byte[] { 0xDA, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDB
            {
                FormatString = "in a,({0})",
				RawBytes = new byte[] { 0xDB, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDC
            {
                FormatString = "call c,{0}",
				RawBytes = new byte[] { 0xDC, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
			null, //0xDD
            new Z80Instruction //0xDE
            {
                FormatString = "sbc a,{0}",
				RawBytes = new byte[] { 0xDE, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xDF
            {
                FormatString = "rst 24",
				RawBytes = new byte[] { 0xDF },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xE0
            {
                FormatString = "ret po",
				RawBytes = new byte[] { 0xE0 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xE1
            {
                FormatString = "pop hl",
				RawBytes = new byte[] { 0xE1 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xE2
            {
                FormatString = "jp po,{0}",
				RawBytes = new byte[] { 0xE2, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xE3
            {
                FormatString = "ex (sp),hl",
				RawBytes = new byte[] { 0xE3 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xE4
            {
                FormatString = "call po,{0}",
				RawBytes = new byte[] { 0xE4, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xE5
            {
                FormatString = "push hl",
				RawBytes = new byte[] { 0xE5 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xE6
            {
                FormatString = "and {0}",
				RawBytes = new byte[] { 0xE6, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xE7
            {
                FormatString = "rst 32",
				RawBytes = new byte[] { 0xE7 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xE8
            {
                FormatString = "ret pe",
				RawBytes = new byte[] { 0xE8 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xE9
            {
                FormatString = "jp (hl)",
				RawBytes = new byte[] { 0xE9 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xEA
            {
                FormatString = "jp pe,{0}",
				RawBytes = new byte[] { 0xEA, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xEB
            {
                FormatString = "ex de,hl",
				RawBytes = new byte[] { 0xEB },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xEC
            {
                FormatString = "call pe,{0}",
				RawBytes = new byte[] { 0xEC, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
			null, //0xED
            new Z80Instruction //0xEE
            {
                FormatString = "xor {0}",
				RawBytes = new byte[] { 0xEE, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xEF
            {
                FormatString = "rst 40",
				RawBytes = new byte[] { 0xEF },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xF0
            {
                FormatString = "ret p",
				RawBytes = new byte[] { 0xF0 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xF1
            {
                FormatString = "pop af",
				RawBytes = new byte[] { 0xF1 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xF2
            {
                FormatString = "jp p,{0}",
				RawBytes = new byte[] { 0xF2, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xF3
            {
                FormatString = "di",
				RawBytes = new byte[] { 0xF3 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xF4
            {
                FormatString = "call p,{0}",
				RawBytes = new byte[] { 0xF4, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xF5
            {
                FormatString = "push af",
				RawBytes = new byte[] { 0xF5 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xF6
            {
                FormatString = "or {0}",
				RawBytes = new byte[] { 0xF6, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xF7
            {
                FormatString = "rst 48",
				RawBytes = new byte[] { 0xF7 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xF8
            {
                FormatString = "ret m",
				RawBytes = new byte[] { 0xF8 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xF9
            {
                FormatString = "ld sp,hl",
				RawBytes = new byte[] { 0xF9 },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xFA
            {
                FormatString = "jp m,{0}",
				RawBytes = new byte[] { 0xFA, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xFB
            {
                FormatString = "ei",
				RawBytes = new byte[] { 0xFB },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xFC
            {
                FormatString = "call m,{0}",
				RawBytes = new byte[] { 0xFC, 0x00, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.AbsoluteMemoryAddress,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = true,
                ChangesPc = true,
                WritesToMemory = false,
                WritesToPort = false
            },
			null, //0xFD
            new Z80Instruction //0xFE
            {
                FormatString = "cp {0}",
				RawBytes = new byte[] { 0xFE, 0x00 },
				Operands = new[]
                {
                    new Operand
                    {
                        Type = OperandType.ImmediateByte,
                        OffsetWithinInstruction = 1
                    }
                },
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
            new Z80Instruction //0xFF
            {
                FormatString = "rst 56",
				RawBytes = new byte[] { 0xFF },
				Operands = new Operand[0],
				InstructionType = InstructionType.Standard,
				ChangesSp = false,
                ChangesPc = false,
                WritesToMemory = false,
                WritesToPort = false
            },
		};
    }
}